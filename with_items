When using Loops inside of Ansible you can use with items which expects a list type structure.

---
- name: With Testing
  hosts: local
  tasks:
    - name: Test with_items
      debug:
        msg: Hello world <-- This will print Hello world five times once for each item in the list below
      with_items: <-- Here we specify a five item list
        - 10.10.10.1
        - 10.10.20.1
        - 10.10.30.1
        - 10.10.40.1
        - 10.10.50.1

!Using Ansible with a for loop type structure
---
- name: With Testing
  hosts: local
  tasks:
    - name: Test with_items
      debug:
        msg: "{{ item }}" <-- This acts as a for loop where item is each individual element in the list. 
      with_items:
        - 10.10.10.1
        - 10.10.20.1
        - 10.10.30.1
        - 10.10.40.1
        - 10.10.50.1

!The below code will handle a for loop in the exact same manner as the code above.
 ---
- name: With Testing
  hosts: local
  vars:
    my_devices:
        - 10.10.10.1
        - 10.10.20.1
        - 10.10.30.1
        - 10.10.40.1
        - 10.10.50.1
  tasks:
    - name: Test with_items
      debug:
        msg: "{{ item }}"
      with_items: "{{ my_devices }}"
      when: False <-- Here we couple a when statement which prevents this task from running

!You can also use complex conditionals such as the when statement checking when the item is equal to a certain IP address.

---
- name: With Testing
  hosts: local
  vars:
    my_devices:
        - 10.10.10.1
        - 10.10.20.1
        - 10.10.30.1
        - 10.10.40.1
        - 10.10.50.1
  tasks:
    - name: Test with_items
      debug:
        msg: "{{ item }}"
      with_items: "{{ my_devices }}"
      when: "item == '10.10.10.1'" <-- The when statement is expecting j2 so we did not have to enclose item in brackets

